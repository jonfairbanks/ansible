---
- hosts: all
  become: true
  become_method: sudo
  gather_facts: yes
  tasks:
  - name: Checking for updates
    apt: update_cache=yes

  - name: Upgrading system apps
    apt: upgrade=dist
    
  - name: Check if reboot is required
    stat:
      path: /var/run/reboot-required
    register: reboot_required

  # ref http://stackoverflow.com/a/35169496
  - name: Notify of pending reboot
    pause:
      prompt: "Press ENTER to reboot {{ item }} now, or Ctrl+C to abort."
    when: "'reboot_required' in hostvars[item] and hostvars[item]['reboot_required'].stat.exists"
    with_items: "{{ play_hosts }}"
  
  # ref https://support.ansible.com/hc/en-us/articles/201958037-Reboot-a-server-and-wait-for-it-to-come-back
  - name: Rebooting machine(s)
    become: yes
    shell: sleep 2 && shutdown -r now "Ansible updates triggered"
    async: 1
    poll: 0
    ignore_errors: true
    when: reboot_required.stat.exists
  
  - name: Waiting for the machine(s) to come back
    local_action: 
      module: wait_for 
        host={{ ansible_host }} 
        state=started
        port=22
        delay=60
    become: false
    when: reboot_required.stat.exists

  - name: Verify node uptime
    shell: "uptime"
    async: 60
    poll: 1
    register: uptime

  - debug: var=uptime.stdout_lines
